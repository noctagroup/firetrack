services:
  nginx:
    image: nginx:1.27-alpine-slim
    container_name: firetrack_nginx
    hostname: firetrack_nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./devops/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./devops/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./devops/certbot/www:/var/www/certbot:ro
      - ./devops/certbot/conf:/etc/letsencrypt:ro
    restart: always

  certbot:
    image: certbot/certbot:v3.2.0
    container_name: firetrack_certbot
    hostname: firetrack_certbot
    volumes:
      - ./devops/certbot/www:/var/www/certbot:rw
      - ./devops/certbot/conf:/etc/letsencrypt:rw
    # Renova o certificado a cada 12h
    entrypoint: >
      /bin/sh -c "trap exit TERM; while :; do
      certbot renew --webroot -w /var/www/certbot;
      sleep 12h & wait $${!};
      done;"

  postgis:
    image: postgis/postgis:17-3.5
    container_name: firetrack_postgis
    hostname: firetrack_postgis
    ports:
      - 5432:5432
    volumes:
      - postgis_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  django:
    build:
      context: ./apps/api
      dockerfile: dockerfile
    container_name: firetrack_django
    hostname: firetrack_django
    command: gunicorn firetrack.wsgi --bind 0.0.0.0:8000
    expose:
      - 8000
    ports:
      - 8000:8000
    depends_on:
      - postgis
      - nginx
    environment:
      DJANGO_DEBUG: false
      DJANGO_POSTGIS_DB: postgres
      DJANGO_POSTGIS_USER: postgres
      DJANGO_POSTGIS_PASSWORD: postgres
      DJANGO_POSTGIS_HOST: firetrack_postgis
      DJANGO_POSTGIS_PORT: 5432
      DJANGO_ALLOWED_HOSTS: '["api.firetrack.nocta-software-dsm.com"]'
      # TODO: customizar o DJANGO_SECRET_KEY, com algo tipo o ansible vault + playbook
    restart: on-failure

  docs:
    build:
      context: ./apps/docs
      dockerfile: dockerfile
    container_name: firetrack_docs
    hostname: firetrack_docs
    command: uvicorn main:app --host 0.0.0.0 --port 8001
    expose:
      - 8001
    ports:
      - 8001:8001
    restart: on-failure

volumes:
  postgis_data:
